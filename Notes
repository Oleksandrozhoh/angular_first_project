/* 
State management:
    1. Zone.js and angular's change detection mechanism - works automatically, no special installation needed.
       -- old, every time there is a change, angular checks all components and updates the UI. Not efficient.
    2. Use signals to notify andular about value changes and required UI updates. - requires usage of special instructions and code
       -- new, more efficient, only updates the UI when the signal changes. using subscription to the signal. so when the signal changes, the UI updates automatically.

Directives:
   - angular element enhancers
      - there are 2 types of directives:
         - structural directives
         - attribute directives

Services:
   - class with @Injectable decorator
   - can be injected into components, directives, pipes, and other services
   - can be used to share data and logic between components

Dependency Injection:
   - angular's way of providing dependencies to components, directives, pipes, and services

Property Binding:
   - binding data from component to template, passing data to child components
   - using square brackets [] to bind data from component to template
   - can be used to bind data to attributes, properties, and events

Event Binding:
   - binding events from template to component, passing data from child components to parent components
   - using parentheses () to bind events from template to component

2-way Binding:
   - binding data from component to template and from template to component
   - using [(ngModel)] to bind data from component to template and from template to component
   - requires FormsModule to be imported in the module
   - can be used to bind data to input elements, select elements, and textarea elements

   @if @else @for
   - structural directives used to conditionally render elements in the template

   template merging
   - <ng-content> tag inside of a child template
   - can be used to create components that can accept any content from the parent component

   pipes
   - used to transform data in the template
   - can be used to format data, filter data, and sort data

   ngSubmit event
   - used to handle form submission in the template
   - can be used to prevent default form submission behavior
   - can be used to handle form submission in the component

   Components can be:
   - standalone components
   - module based components





*/
